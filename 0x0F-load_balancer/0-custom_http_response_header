#!/usr/bin/env bash
# duplicates web-01 to web-02
# please refer to 0x0C-web_server scripts

# bash color
brown='\e[0;33m'
green='\e[1;32m'
blue='\e[1;34m'
reset='\033[0m'

function install()
{
    command -v "$1" &> /dev/null
    
	#shellcheck disable=SC2181
	if [ "$?" -ne 0 ];
	then
		echo -e "	Installing: ${brown}$1${reset}\n"
		sudo apt-get update -y -qq && sudo apt-get install -y "$1" -qq
		echo -e "\n"
	else
		echo -e "	${green}$1 already installed.${reset}"
	fi
}

#installing nginx function call
install nginx

echo -e "\n${blue} Setting up.${reset}\n"

#allowing nginx on the firewall
sudo ufw allow 'Nginx HTTP'

#Giving the current user the permission/ownership to website files for editing
if [ -d "/var/www" ];
then
	sudo chown -R "$USER":"$USER" /var/www
	sudo chmod -R 755 /var/www
else
	sudo mkdir -p /var/www
	sudo chown -R "$USER":"$USER" /var/www
	sudo chmod -R 755 /var/www
fi


# creating the html and error directory if not exist
for dir in /var/www/{html,error}; do
    	if ! [ -d "$dir" ];
	then
		mkdir -p "$dir"
	fi
done

# creating the new index file with a string
#echo "Hello World!" > /var/www/html/index.html
echo "Hello World!" > /var/www/html/index.html

# creating a new error page
echo "Ceci n'est pas une page" > /var/www/html/error_404.html


# backup the default server configuration file
sudo cp /etc/nginx/sites-enabled/default nginx-sites-enabled_default.backup

server_configuration=\
"server{
		listen 80 default_server;
		listen [::]:80 default_server;
		root /var/www/html;
		index index.html index.htm index.nginx-debian.html;

		add_header X-Served-By \$hostname;

		location /redirect_me {
		   return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
		}
		error_page 404 /error_404.html;
		location = /error_404.html {
			 internal;
		}
}"

#shellcheck disable=SC2154
echo "$server_configuration" | sudo dd status=none of=/etc/nginx/sites-enabled/default

if [ "$(pgrep -c nginx)" -le 0 ]; then
	sudo service nginx start
else
	sudo service nginx restart
fi
